from __future__ import annotations

import numpy as np

from typing import Any, Union
from progressivis.core.types import Floats

class kll_ints_sketch:
    def __init__(self, val: float) -> None: ...
    def get_pmf(self, val: Floats) -> Floats: ...
    def update(self, val: int) -> None: ...
    def merge(self, val: kll_ints_sketch) -> None: ...
    def get_min_value(self) -> int: ...
    def get_max_value(self) -> int: ...
    def get_quantile(self, v: float) ->float: ...
    def get_quantiles(self, v: Floats) ->Floats: ...
    @property
    def n(self) -> int: ...

class kll_floats_sketch:
    def __init__(self, val: float) -> None: ...
    def get_pmf(self, val: Floats) -> Floats: ...
    def update(self, val: Union[float, np.ndarray[Any, Any]]) -> None: ...
    def merge(self, val: kll_floats_sketch) -> None: ...
    def get_min_value(self) -> float: ...
    def get_max_value(self) -> float: ...
    def get_quantile(self, v: float) ->float: ...
    def get_quantiles(self, v: Floats) ->Floats: ...
    @property
    def n(self) -> int: ...

class frequent_strings_sketch:
    def __init__(self, val: float) -> None: ...
    def update(self, val: str) -> None: ...
    def merge(self, val: frequent_strings_sketch) -> None: ...
    def get_frequent_items(self, v: Any) -> Any: ...

class frequent_items_error_type:
    NO_FALSE_POSITIVES: bool
